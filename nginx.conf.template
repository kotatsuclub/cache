events {}

http {
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=one:60m max_size=2g inactive=600m;
    proxy_cache_key "$scheme$request_method$host$request_uri";
    proxy_cache_methods GET HEAD;

    server {
        listen 443 ssl;

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_session_timeout 5m;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        ssl_certificate /etc/ssl/nginx.crt;
        ssl_certificate_key /etc/ssl/private/nginx.key;
        ssl_dhparam /etc/nginx/dhparam.pem;
        ssl_protocols TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
        ssl_ecdh_curve secp384r1;
        resolver $DNS-IP-1 $DNS-IP-2 valid=300s;
        resolver_timeout 5s; 

        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        location / {
            proxy_cache one;
            proxy_cache_valid 60m;
            proxy_cache_valid 404 1m;
            proxy_cache_bypass $http_cache_control;
            proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
            proxy_ignore_headers Set-Cookie;
            proxy_ignore_headers Cache-Control;
            proxy_hide_header Set-Cookie;
            add_header X-Cache-Status $upstream_cache_status;

            proxy_set_header X-Real-Ip $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded_Proto $scheme;
            proxy_set_header Host $http_host;
            proxy_pass ${NGINX_PROXY_PASS};
        }

        location ^~/ghost/ {
            proxy_set_header X-Real-Ip $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded_Proto $scheme;
            proxy_set_header Host $http_host;
            proxy_pass ${NGINX_PROXY_PASS};
        }
    }
}
